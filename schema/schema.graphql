
  schema {
    query: Query
    mutation: Mutation
  }


  type Query {
    me: User
    location(virtualAddress: String!): Location
    health: String!
  }


  type Mutation {
    accountKitSignup(input: AccountKitSignupInput!): AccountKitSignupPayload!
    createLocation(input: CreateLocationInput!): LocationPayload!
    updateLocation(input: UpdateLocationInput!): LocationPayload!
    deleteLocation(input: DeleteLocationInput!): LocationPayload!
  }

  input AccountKitSignupInput {
    code: String!
  }

  type AccountKitSignupPayload {
    apiToken: String!
    user: User!
  }

  input CreateLocationInput {
    access: LocationAccess
    latitude: Float!
    longitude: Float!
    code: String!
    description: String
  }

  input UpdateLocationInput {
    id: ID!
    latitude: Float
    longitude: Float
    code: String
    description: String
  }

  input DeleteLocationInput {
    id: ID!
  }

  type LocationPayload {
    location: Location!
  }


  type User {
    id: ID!
    username: String!
    name: String
    email: String
    phoneNumber: String!
    locations: [Location!]!
  }


  enum LocationAccess {
    PRIVATE
    PUBLIC
  }
  type Location {
    id: ID!
    user: User!
    access: LocationAccess!
    code: String!
    description: String!
    latitude: Float!
    longitude: Float!
  }
